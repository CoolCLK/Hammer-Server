--- a/net/minecraft/server/ChunkRegionLoader.java
+++ b/net/minecraft/server/ChunkRegionLoader.java
@@ -107,7 +107,7 @@
 
             if (nbttagcompound1.hasKeyOfType("TileTicks", 9)) {
                 nbttaglist1 = nbttagcompound1.getList("TileTicks", 10);
-                function = IRegistry.BLOCK::getKey;
+                function = (Function<Block, MinecraftKey>)IRegistry.BLOCK::getKey; // CraftBukkit - decompile error
                 registryblocks = IRegistry.BLOCK;
                 registryblocks.getClass();
                 object1 = TickListChunk.a(nbttaglist1, function, registryblocks::get);
@@ -119,7 +119,7 @@
 
             if (nbttagcompound1.hasKeyOfType("LiquidTicks", 9)) {
                 nbttaglist1 = nbttagcompound1.getList("LiquidTicks", 10);
-                function = IRegistry.FLUID::getKey;
+                function = (Function<FluidType, MinecraftKey>)IRegistry.FLUID::getKey; // CraftBukkit - decompile error
                 registryblocks = IRegistry.FLUID;
                 registryblocks.getClass();
                 object2 = TickListChunk.a(nbttaglist1, function, registryblocks::get);
@@ -262,8 +262,9 @@
         NBTTagCompound nbttagcompound2;
 
         for (int i = -1; i < 17; ++i) {
+            final int finalI = i; // CraftBukkit - decompile error
             ChunkSection chunksection = (ChunkSection) Arrays.stream(achunksection).filter((chunksection1) -> {
-                return chunksection1 != null && chunksection1.getYPosition() >> 4 == i;
+                return chunksection1 != null && chunksection1.getYPosition() >> 4 == finalI; // CraftBukkit - decompile error
             }).findFirst().orElse(Chunk.a);
             NibbleArray nibblearray = lightenginethreaded.a(EnumSkyBlock.BLOCK).a(SectionPosition.a(chunkcoordintpair, i));
             NibbleArray nibblearray1 = lightenginethreaded.a(EnumSkyBlock.SKY).a(SectionPosition.a(chunkcoordintpair, i));
@@ -297,7 +298,7 @@
 
         if (abiomebase != null) {
             for (int j = 0; j < abiomebase.length; ++j) {
-                aint[j] = IRegistry.BIOME.a((Object) abiomebase[j]);
+                aint[j] = IRegistry.BIOME.a(abiomebase[j]); // CraftBukkit - decompile error
             }
         }
 
@@ -391,6 +392,27 @@
         return nbttagcompound;
     }
 
+    // CraftBukkit start
+    public static ChunkStatus getStatus(String name) {
+        try {
+            // We need this otherwise we return EMPTY for invalid names
+            MinecraftKey key = new MinecraftKey(name);
+            return IRegistry.CHUNK_STATUS.getOptional(key).orElse(null);
+        } catch (Exception ex) {
+            return null; // invalid name
+        }
+    }
+
+    public static ChunkStatus getStatus(NBTTagCompound compound) {
+        if (compound == null) {
+            return null;
+        }
+
+        // Note: Copied from below
+        return getStatus(compound.getCompound("Level").getString("Status"));
+    }
+    // CraftBukkit end
+
     public static ChunkStatus.Type a(@Nullable NBTTagCompound nbttagcompound) {
         if (nbttagcompound != null) {
             ChunkStatus chunkstatus = ChunkStatus.a(nbttagcompound.getCompound("Level").getString("Status"));
