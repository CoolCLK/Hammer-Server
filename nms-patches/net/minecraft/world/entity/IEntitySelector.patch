--- a/net/minecraft/world/entity/IEntitySelector.java
+++ b/net/minecraft/world/entity/IEntitySelector.java
@@ -10,6 +10,7 @@
 
 public final class IEntitySelector {
 
+    public static final Predicate<net.minecraft.world.entity.item.EntityItem> ITEM_PICKUP_ABLE = entityItem -> entityItem.isAlive() && entityItem.isPickupAble(); // CraftBukkit - SPIGOT-6689: Custom entity selector
     public static final Predicate<Entity> ENTITY_STILL_ALIVE = Entity::isAlive;
     public static final Predicate<Entity> LIVING_ENTITY_STILL_ALIVE = (entity) -> {
         return entity.isAlive() && entity instanceof EntityLiving;
@@ -42,7 +43,7 @@
         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();
 
         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.NO_SPECTATORS.and((entity1) -> {
-            if (!entity1.isCollidable()) {
+            if (!entity1.canCollideWithBukkit(entity) || !entity.canCollideWithBukkit(entity1)) { // CraftBukkit - collidable API
                 return false;
             } else if (entity.level.isClientSide && (!(entity1 instanceof EntityHuman) || !((EntityHuman) entity1).fi())) {
                 return false;
