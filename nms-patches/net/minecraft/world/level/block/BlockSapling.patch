--- a/net/minecraft/world/level/block/BlockSapling.java
+++ b/net/minecraft/world/level/block/BlockSapling.java
@@ -1,6 +1,8 @@
 package net.minecraft.world.level.block;
 
 import net.minecraft.core.BlockPosition;
+import net.minecraft.data.worldgen.features.TreeFeatures;
+import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.level.WorldServer;
 import net.minecraft.util.RandomSource;
 import net.minecraft.world.level.IBlockAccess;
@@ -12,10 +14,17 @@
 import net.minecraft.world.level.block.state.IBlockData;
 import net.minecraft.world.level.block.state.properties.BlockProperties;
 import net.minecraft.world.level.block.state.properties.BlockStateInteger;
+import net.minecraft.world.level.levelgen.feature.WorldGenFeatureConfigured;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.phys.shapes.VoxelShapeCollision;
 
-public class BlockSapling extends BlockPlant implements IBlockFragilePlantElement {
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import net.minecraft.server.level.EntityPlayer;
+import org.jetbrains.annotations.Nullable;
+// CraftBukkit end
+
+public class BlockSapling extends BlockPlant implements IBlockFragilePlantElement, IBlockFragilePlantElement.PlayerContextOverride { // CraftBukkit
 
     public static final BlockStateInteger STAGE = BlockProperties.STAGE;
     protected static final float AABB_OFFSET = 6.0F;
@@ -42,10 +51,19 @@
     }
 
     public void advanceTree(WorldServer worldserver, BlockPosition blockposition, IBlockData iblockdata, RandomSource randomsource) {
+    // CraftBukkit start
+        advanceTree(worldserver, blockposition, iblockdata, randomsource, false, null);
+    }
+    public void advanceTree(WorldServer worldserver, BlockPosition blockposition, IBlockData iblockdata, RandomSource randomsource, boolean boneMeal, EntityPlayer player) {
+    // CraftBukkit end
         if ((Integer) iblockdata.getValue(BlockSapling.STAGE) == 0) {
             worldserver.setBlock(blockposition, (IBlockData) iblockdata.cycle(BlockSapling.STAGE), 4);
         } else {
-            this.treeGrower.growTree(worldserver, worldserver.getChunkSource().getGenerator(), blockposition, iblockdata, randomsource);
+            // CraftBukkit start
+            CraftEventFactory.handleStructurePlaceEvent((access) -> {
+                this.treeGrower.growTree(access, worldserver.getChunkSource().getGenerator(), blockposition, iblockdata, randomsource);
+            }, blockposition, worldserver, boneMeal, player);
+            // CraftBukkit end
         }
 
     }
@@ -61,8 +79,10 @@
     }
 
     @Override
-    public void performBonemeal(WorldServer worldserver, RandomSource randomsource, BlockPosition blockposition, IBlockData iblockdata) {
-        this.advanceTree(worldserver, blockposition, iblockdata, randomsource);
+    // CraftBukkit start
+    public void performBonemeal(WorldServer worldserver, RandomSource randomsource, BlockPosition blockposition, IBlockData iblockdata, EntityPlayer player) {
+        this.advanceTree(worldserver, blockposition, iblockdata, randomsource, true, player);
+    // CraftBukkit end
     }
 
     @Override
