--- a/net/minecraft/world/level/GeneratorAccess.java
+++ b/net/minecraft/world/level/GeneratorAccess.java
@@ -24,6 +24,10 @@
 import net.minecraft.world.ticks.NextTickListEntry;
 import net.minecraft.world.ticks.TickListPriority;
 
+// CraftBukkit start
+import net.minecraft.world.level.levelgen.feature.WorldGenFeatureConfigured;
+// CraftBukkit end
+
 public interface GeneratorAccess extends ICombinedAccess, IWorldTime {
 
     @Override
@@ -35,11 +39,11 @@
 
     LevelTickAccess<Block> getBlockTicks();
 
-    private default <T> NextTickListEntry<T> createTick(BlockPosition blockposition, T t0, int i, TickListPriority ticklistpriority) {
+    default <T> NextTickListEntry<T> createTick(BlockPosition blockposition, T t0, int i, TickListPriority ticklistpriority) { // CraftBukkit - decompile error
         return new NextTickListEntry<>(t0, blockposition, this.getLevelData().getGameTime() + (long) i, ticklistpriority, this.nextSubTickCount());
     }
 
-    private default <T> NextTickListEntry<T> createTick(BlockPosition blockposition, T t0, int i) {
+    default <T> NextTickListEntry<T> createTick(BlockPosition blockposition, T t0, int i) { // CraftBukkit - decompile error
         return new NextTickListEntry<>(t0, blockposition, this.getLevelData().getGameTime() + (long) i, this.nextSubTickCount());
     }
 
@@ -114,4 +118,11 @@
     default void gameEvent(GameEvent gameevent, BlockPosition blockposition, GameEvent.a gameevent_a) {
         this.gameEvent(gameevent, Vec3D.atCenterOf(blockposition), gameevent_a);
     }
+
+    // CraftBukkit start
+    net.minecraft.server.level.WorldServer getMinecraftWorld();
+
+    default void logFeaturePlacement(WorldGenFeatureConfigured<?, ?> featureConfigured) {
+    }
+    // CraftBukkit end
 }
