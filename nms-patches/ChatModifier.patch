--- a/net/minecraft/server/ChatModifier.java
+++ b/net/minecraft/server/ChatModifier.java
@@ -209,7 +209,7 @@
         return this;
     }
 
-    private ChatModifier o() {
+    public ChatModifier o() {  // CraftBukkit: make public; PAIL: getChatModifier (or getParent)
         return this.a == null ? ChatModifier.k : this.a;
     }
 
@@ -263,16 +263,18 @@
     }
 
     public int hashCode() {
-        int i = this.b.hashCode();
+        // CraftBukkit start - fix npe
+        int i = b == null ? 0 : this.b.hashCode();
 
-        i = 31 * i + this.c.hashCode();
-        i = 31 * i + this.d.hashCode();
-        i = 31 * i + this.e.hashCode();
-        i = 31 * i + this.f.hashCode();
-        i = 31 * i + this.g.hashCode();
-        i = 31 * i + this.h.hashCode();
-        i = 31 * i + this.i.hashCode();
-        i = 31 * i + this.j.hashCode();
+        i = 31 * i + (c == null ? 0 : this.c.hashCode());
+        i = 31 * i + (d == null ? 0 : this.d.hashCode());
+        i = 31 * i + (e == null ? 0 : this.e.hashCode());
+        i = 31 * i + (f == null ? 0 : this.f.hashCode());
+        i = 31 * i + (g == null ? 0 : this.g.hashCode());
+        i = 31 * i + (h == null ? 0 : this.h.hashCode());
+        i = 31 * i + (this.i == null ? 0 : this.i.hashCode());
+        i = 31 * i + (j == null ? 0 : this.j.hashCode());
+        // CraftBukkit end
         return i;
     }
 
@@ -307,6 +309,63 @@
         return chatmodifier;
     }
 
+    // CraftBukkit start - new methods
+    public ChatModifier merge(ChatModifier other) {
+        if (this.b == null) {
+            this.b = other.b;
+        }
+        if (this.c == null) {
+            this.c = other.c;
+        }
+        if (this.d == null) {
+            this.d = other.d;
+        }
+        if (this.e == null) {
+            this.e = other.e;
+        }
+        if (this.f == null) {
+            this.f = other.f;
+        }
+        if (this.g == null) {
+            this.g = other.g;
+        }
+        if (this.h == null) {
+            this.h = other.h;
+        }
+        if (this.i == null) {
+            this.i = other.i;
+        }
+        if (this.j == null) {
+            this.i = other.i;
+        }
+        this.setChatModifier(null);
+        return this;
+    }
+
+    public ChatModifier simplify() {
+        if (this.b == this.o().getColor()) {
+            this.b = null;
+        }
+        if (this.c != null && this.c.booleanValue() == this.o().isBold()) {
+            this.c = null;
+        }
+        if (this.d != null && this.d.booleanValue() == this.o().isItalic()) {
+            this.d = null;
+        }
+        if (this.e != null && this.e.booleanValue() == this.o().isUnderlined()) {
+            this.e = null;
+        }
+        if (this.f != null && this.f.booleanValue() == this.o().isStrikethrough()) {
+            this.f = null;
+        }
+        if (this.g != null && this.g.booleanValue() == this.o().isRandom()) {
+            this.g = null;
+        }
+
+        return this;
+    }
+    // CraftBukkit end
+
     public static class ChatModifierSerializer implements JsonDeserializer<ChatModifier>, JsonSerializer<ChatModifier> {
 
         public ChatModifierSerializer() {}
@@ -441,12 +500,12 @@
         }
 
         @Nullable
-        public JsonElement serialize(Object object, Type type, JsonSerializationContext jsonserializationcontext) {
+        public JsonElement serialize(ChatModifier object, Type type, JsonSerializationContext jsonserializationcontext) { // CraftBukkit - fix decompile error
             return this.a((ChatModifier) object, type, jsonserializationcontext);
         }
 
         @Nullable
-        public Object deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException {
+        public ChatModifier deserialize(JsonElement jsonelement, Type type, JsonDeserializationContext jsondeserializationcontext) throws JsonParseException { // CraftBukkit - fix decompile error
             return this.a(jsonelement, type, jsondeserializationcontext);
         }
     }
