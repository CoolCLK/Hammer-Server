--- a/net/minecraft/server/PortalTravelAgent.java
+++ b/net/minecraft/server/PortalTravelAgent.java
@@ -53,6 +53,13 @@
 
     @Nullable
     public ShapeDetector.c a(BlockPosition blockposition, Vec3D vec3d, EnumDirection enumdirection, double d0, double d1, boolean flag) {
+        // CraftBukkit start - Allow for custom portal search radius
+        return findPortal(blockposition, vec3d, enumdirection, d0, d1, flag, 128);
+    }
+
+    @Nullable
+    public ShapeDetector.c findPortal(BlockPosition blockposition, Vec3D vec3d, EnumDirection enumdirection, double d0, double d1, boolean flag, int searchRadius) {
+        // CraftBukkit end
         boolean flag1 = true;
         boolean flag2 = true;
         BlockPosition blockposition1 = null;
@@ -70,10 +77,10 @@
             } else {
                 double d2 = Double.MAX_VALUE;
 
-                for (int i = -128; i <= 128; ++i) {
+                for (int i = -searchRadius; i <= searchRadius; ++i) { // CraftBukkit - custom portal search radius
                     BlockPosition blockposition2;
 
-                    for (int j = -128; j <= 128; ++j) {
+                    for (int j = -searchRadius; j <= searchRadius; ++j) { // CraftBukkit - custom portal search radius
                         for (BlockPosition blockposition3 = blockposition.b(i, this.world.getHeight() - 1 - blockposition.getY(), j); blockposition3.getY() >= 0; blockposition3 = blockposition2) {
                             blockposition2 = blockposition3.down();
                             if (this.world.getType(blockposition3).getBlock() == PortalTravelAgent.b) {
@@ -121,11 +128,19 @@
     }
 
     public boolean a(Entity entity) {
+        // CraftBukkit start - Allow for portal creation to be based on coordinates instead of entity and add custom creation radius
+        return this.createPortal(entity.bukkitEntity, entity.locX, entity.locY, entity.locZ, 16) != null;
+    }
+
+    public org.bukkit.Location createPortal(org.bukkit.entity.Entity entity, double x, double y, double z, int creationRadius) {
+        // CraftBukkit end
         boolean flag = true;
         double d0 = -1.0D;
-        int i = MathHelper.floor(entity.locX);
-        int j = MathHelper.floor(entity.locY);
-        int k = MathHelper.floor(entity.locZ);
+        // CraftBukkit start
+        int i = MathHelper.floor(x);
+        int j = MathHelper.floor(y);
+        int k = MathHelper.floor(z);
+        // CraftBukkit end
         int l = i;
         int i1 = j;
         int j1 = k;
@@ -149,11 +164,11 @@
         double d3;
         double d4;
 
-        for (i2 = i - 16; i2 <= i + 16; ++i2) {
-            d1 = (double) i2 + 0.5D - entity.locX;
+        for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // CraftBukkit - creation radius
+            d1 = (double) i2 + 0.5D - x; // CraftBukkit
 
-            for (j2 = k - 16; j2 <= k + 16; ++j2) {
-                d2 = (double) j2 + 0.5D - entity.locZ;
+            for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // CraftBukkit - creation radius
+                d2 = (double) j2 + 0.5D - z; // CraftBukkit
 
                 label257:
                 for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -185,7 +200,7 @@
                                 }
                             }
 
-                            d3 = (double) k2 + 0.5D - entity.locY;
+                            d3 = (double) k2 + 0.5D - y; // CraftBukkit
                             d4 = d1 * d1 + d3 * d3 + d2 * d2;
                             if (d0 < 0.0D || d4 < d0) {
                                 d0 = d4;
@@ -201,11 +216,11 @@
         }
 
         if (d0 < 0.0D) {
-            for (i2 = i - 16; i2 <= i + 16; ++i2) {
-                d1 = (double) i2 + 0.5D - entity.locX;
+            for (i2 = i - creationRadius; i2 <= i + creationRadius; ++i2) { // CraftBukkit - creation radius
+                d1 = (double) i2 + 0.5D - x; // CraftBukkit
 
-                for (j2 = k - 16; j2 <= k + 16; ++j2) {
-                    d2 = (double) j2 + 0.5D - entity.locZ;
+                for (j2 = k - creationRadius; j2 <= k + creationRadius; ++j2) { // CraftBukkit - creation radius
+                    d2 = (double) j2 + 0.5D - z; // CraftBukkit
 
                     label205:
                     for (k2 = this.world.getHeight() - 1; k2 >= 0; --k2) {
@@ -230,7 +245,7 @@
                                     }
                                 }
 
-                                d3 = (double) k2 + 0.5D - entity.locY;
+                                d3 = (double) k2 + 0.5D - y; // CraftBukkit
                                 d4 = d1 * d1 + d3 * d3 + d2 * d2;
                                 if (d0 < 0.0D || d4 < d0) {
                                     d0 = d4;
@@ -281,7 +296,7 @@
             for (i3 = -1; i3 < 4; ++i3) {
                 if (k2 == -1 || k2 == 2 || i3 == -1 || i3 == 3) {
                     blockposition_mutableblockposition.d(i5 + k2 * k5, j5 + i3, j2 + k2 * l5);
-                    this.world.setTypeAndData(blockposition_mutableblockposition, Blocks.OBSIDIAN.getBlockData(), 3);
+                    this.world.setTypeUpdate(blockposition_mutableblockposition, Blocks.OBSIDIAN.getBlockData());
                 }
             }
         }
@@ -295,7 +310,7 @@
             }
         }
 
-        return true;
+        return new org.bukkit.Location(this.world.getWorld(), i5 + 0.5, j5, j2 + 0.5, entity.getLocation().getYaw(), entity.getLocation().getPitch()); // CraftBukkit - return portal location
     }
 
     public void a(long i) {
