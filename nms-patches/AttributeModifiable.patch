--- a/net/minecraft/server/AttributeModifiable.java
+++ b/net/minecraft/server/AttributeModifiable.java
@@ -2,6 +2,8 @@
 
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -16,7 +18,7 @@
     private final Map<Integer, Set<AttributeModifier>> c = Maps.newHashMap();
     private final Map<String, Set<AttributeModifier>> d = Maps.newHashMap();
     private final Map<UUID, AttributeModifier> e = Maps.newHashMap();
-    private double f;
+    public double f; // PAIL: rename baseValue, private-public
     private boolean g = true;
     private double h;
 
@@ -26,7 +28,7 @@
         this.f = iattribute.b();
 
         for (int i = 0; i < 3; ++i) {
-            this.c.put(Integer.valueOf(i), Sets.newHashSet());
+            this.c.put(Integer.valueOf(i), Sets.<AttributeModifier>newHashSet()); // CraftBukkit - decompile error
         }
 
     }
@@ -40,7 +42,7 @@
     }
 
     public void setValue(double d0) {
-        if (d0 != this.b()) {
+        if (d0 != this.b() && !CraftEventFactory.callAttributeBaseChangeEvent(a.holder, b, d0).isCancelled()) { // CraftBukkit; PAIL: rename holderMap, attribute, newValue
             this.f = d0;
             this.f();
         }
@@ -71,12 +73,12 @@
     public void b(AttributeModifier attributemodifier) {
         if (this.a(attributemodifier.a()) != null) {
             throw new IllegalArgumentException("Modifier is already applied on this attribute!");
-        } else {
+        } else if(!CraftEventFactory.callAttributeModifierChangeEvent(a.holder, b, attributemodifier, true).isCancelled()){ // CraftBukkit; PAIL: rename holderMap, attribute, newValue
             Object object = (Set) this.d.get(attributemodifier.b());
 
             if (object == null) {
                 object = Sets.newHashSet();
-                this.d.put(attributemodifier.b(), object);
+                this.d.put(attributemodifier.b(), (Set<AttributeModifier>) object); // CraftBukkit - decompile error
             }
 
             ((Set) this.c.get(Integer.valueOf(attributemodifier.c()))).add(attributemodifier);
@@ -86,12 +88,13 @@
         }
     }
 
-    protected void f() {
+    public void f() { // PAIL: rename recalculateValue, protected-public
         this.g = true;
         this.a.a((AttributeInstance) this);
     }
 
     public void c(AttributeModifier attributemodifier) {
+        if(!CraftEventFactory.callAttributeModifierChangeEvent(a.holder, b, attributemodifier, false).isCancelled()) return; // CraftBukkit
         for (int i = 0; i < 3; ++i) {
             Set set = (Set) this.c.get(Integer.valueOf(i));
 
