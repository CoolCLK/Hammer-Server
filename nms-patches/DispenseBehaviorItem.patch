--- a/net/minecraft/server/DispenseBehaviorItem.java
+++ b/net/minecraft/server/DispenseBehaviorItem.java
@@ -1,5 +1,12 @@
 package net.minecraft.server;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.util.CraftVector;
+import org.bukkit.event.block.BlockDispenseEvent;
+// CraftBukkit end
+
 public class DispenseBehaviorItem implements IDispenseBehavior {
 
     public DispenseBehaviorItem() {}
@@ -15,14 +22,21 @@
 
     protected ItemStack a(ISourceBlock isourceblock, ItemStack itemstack) {
         EnumDirection enumdirection = (EnumDirection) isourceblock.getBlockData().get(BlockDispenser.FACING);
-        IPosition iposition = BlockDispenser.a(isourceblock);
-        ItemStack itemstack1 = itemstack.cloneAndSubtract(1);
+        // CraftBukkit start
+        // IPosition iposition = BlockDispenser.a(isourceblock);
+        // ItemStack itemstack1 = itemstack.cloneAndSubtract(1);
 
-        a(isourceblock.getWorld(), itemstack1, 6, enumdirection, iposition);
+        a(isourceblock.getWorld(), itemstack, 6, enumdirection, isourceblock); // CraftBukkit - pass original item
+        // CraftBukkit end
         return itemstack;
     }
 
-    public static void a(World world, ItemStack itemstack, int i, EnumDirection enumdirection, IPosition iposition) {
+    // CraftBukkit start - uses the original item, IPosition -> ISourceBlock last argument
+    public static void a(World world, ItemStack originalItem, int i, EnumDirection enumdirection, ISourceBlock isourceblock) {
+        if (originalItem.isEmpty()) return;
+        ItemStack itemstack = CraftItemStack.copyNMSStack(originalItem, 1);
+        IPosition iposition = BlockDispenser.a(isourceblock);
+        // CraftBukkit end
         double d0 = iposition.getX();
         double d1 = iposition.getY();
         double d2 = iposition.getZ();
@@ -37,7 +51,19 @@
         double d3 = world.random.nextDouble() * 0.1D + 0.2D;
 
         entityitem.setMot(world.random.nextGaussian() * 0.007499999832361937D * (double) i + (double) enumdirection.getAdjacentX() * d3, world.random.nextGaussian() * 0.007499999832361937D * (double) i + 0.20000000298023224D, world.random.nextGaussian() * 0.007499999832361937D * (double) i + (double) enumdirection.getAdjacentZ() * d3);
+
+        // CraftBukkit start
+        BlockDispenseEvent event = CraftEventFactory.callBlockDispenseEvent(isourceblock, originalItem, 1, CraftVector.toBukkit(entityitem.getMot()));
+        if (event == null) {
+            return;
+        }
+
+        org.bukkit.util.Vector eventVelocity = event.getVelocity();
+        entityitem.setMot(CraftVector.toNMS(eventVelocity));
+
         world.addEntity(entityitem);
+        originalItem.subtract(1);
+        // CraftBukkit end
     }
 
     protected void a(ISourceBlock isourceblock) {
