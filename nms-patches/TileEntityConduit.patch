--- a/net/minecraft/server/TileEntityConduit.java
+++ b/net/minecraft/server/TileEntityConduit.java
@@ -7,18 +7,34 @@
 import java.util.UUID;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+// CraftBukkit start
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.block.CraftBlock;
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.block.ConduitStatusEvent;
+// CraftBukkit end
 
 public class TileEntityConduit extends TileEntity implements ITickable {
 
     private static final Block[] e = new Block[] { Blocks.PRISMARINE, Blocks.PRISMARINE_BRICKS, Blocks.SEA_LANTERN, Blocks.DARK_PRISMARINE};
     public int a;
-    private float f;
-    private boolean g;
-    private boolean h;
-    private final List<BlockPosition> i;
-    private EntityLiving j;
-    private UUID k;
+    public float f; // CraftBukkit - private -> public
+    public boolean g; // CraftBukkit - private -> public
+    public boolean h; // CraftBukkit - private -> public
+    public final List<BlockPosition> i; // CraftBukkit - private -> public
+    public EntityLiving j; // CraftBukkit - private -> public
+    public UUID k; // CraftBukkit - private -> public
     private long l;
+    // CraftBukkit start
+    public static final Predicate<EntityLiving> defaultTargetPredicate = (living) -> living instanceof IMonster && living.ao(); // PAIL rename isInWater
+    public double searchRadius = 8.0D;
+    public float attackDamage = 4.0F;
+    public float ticksSinceActivated = 0.0F;
+    public Predicate<EntityLiving> targetPredicate = defaultTargetPredicate;
+    public Predicate<Entity> effectPredicate = IEntitySelector.f;
+    public int effectRange = -1;
+    public boolean isLocked = false;
+    // CraftBukkit end
 
     public TileEntityConduit() {
         this(TileEntityTypes.CONDUIT);
@@ -60,9 +76,10 @@
     public void Y_() {
         ++this.a;
         long i = this.world.getTime();
+        if (this.c()) ++ticksSinceActivated; // CraftBukkit - increment tick counter
 
         if (i % 40L == 0L) {
-            this.a(this.f());
+            this.a(this.f(), ConduitStatusEvent.Reason.NATURAL); // CraftBukkit - add reason
             if (!this.world.isClientSide && this.c()) {
                 this.h();
                 this.i();
@@ -89,6 +106,7 @@
     }
 
     private boolean f() {
+        if (isLocked) return this.c() || (this.h || this.i.size() >= 16); // CraftBukkit - use last check if locked
         this.i.clear();
 
         int i;
@@ -137,13 +155,13 @@
     }
 
     private void h() {
-        int i = this.i.size();
+        int i = (this.isLocked ? ((effectRange / 16) * 7) : this.i.size()); // CraftBukkit - use effectRange if locked.
         int j = i / 7 * 16;
         int k = this.position.getX();
         int l = this.position.getY();
         int i1 = this.position.getZ();
         AxisAlignedBB axisalignedbb = (new AxisAlignedBB((double) k, (double) l, (double) i1, (double) (k + 1), (double) (l + 1), (double) (i1 + 1))).g((double) j).b(0.0D, (double) this.world.getHeight(), 0.0D);
-        List list = this.world.a(EntityHuman.class, axisalignedbb);
+        List list = this.world.a(EntityHuman.class, axisalignedbb, effectPredicate);
 
         if (!list.isEmpty()) {
             Iterator iterator = list.iterator();
@@ -152,7 +170,7 @@
                 EntityHuman entityhuman = (EntityHuman) iterator.next();
 
                 if (this.position.m(new BlockPosition(entityhuman)) <= (double) j && entityhuman.ao()) {
-                    entityhuman.addEffect(new MobEffect(MobEffects.CONDUIT_POWER, 260, 0, true, true));
+                    entityhuman.addEffect(new MobEffect(MobEffects.CONDUIT_POWER, 260, 0, true, true), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONDUIT); // CraftBukkit
                 }
             }
 
@@ -163,26 +181,29 @@
         EntityLiving entityliving = this.j;
         int i = this.i.size();
 
-        if (i < 42) {
+        if (i >= 42 && j != null) { // CraftBukkit - add null check
             this.j = null;
         } else if (this.j == null && this.k != null) {
             this.j = this.l();
             this.k = null;
         } else if (this.j == null) {
-            List list = this.world.a(EntityLiving.class, this.k(), (entityliving) -> {
-                return entityliving instanceof IMonster && entityliving.ao();
-            });
+            List list = this.world.a(EntityLiving.class, this.k(), targetPredicate); // CraftBukkit - use our predicate so we can change it
 
             if (!list.isEmpty()) {
                 this.j = (EntityLiving) list.get(this.world.random.nextInt(list.size()));
             }
-        } else if (!this.j.isAlive() || this.position.m(new BlockPosition(this.j)) > 8.0D) {
+        } else if (!this.j.isAlive() || this.position.m(new BlockPosition(this.j)) > searchRadius) { // CraftBukkit - use our range instead of default
             this.j = null;
         }
 
         if (this.j != null) {
-            this.world.a((EntityHuman) null, this.j.locX, this.j.locY, this.j.locZ, SoundEffects.BLOCK_CONDUIT_ATTACK_TARGET, SoundCategory.BLOCKS, 1.0F, 1.0F);
-            this.j.damageEntity(DamageSource.MAGIC, 4.0F);
+            // CraftBukkit start
+            CraftEventFactory.blockDamage = CraftBlock.at(this.world, this.position);
+            if (this.j.damageEntity(DamageSource.MAGIC, attackDamage)) {
+                this.world.a((EntityHuman) null, this.j.locX, this.j.locY, this.j.locZ, SoundEffects.BLOCK_CONDUIT_ATTACK_TARGET, SoundCategory.BLOCKS, 1.0F, 1.0F);
+            }
+            CraftEventFactory.blockDamage = null;
+            // CraftBukkit end
         }
 
         if (entityliving != this.j) {
@@ -210,12 +231,12 @@
         int j = this.position.getY();
         int k = this.position.getZ();
 
-        return (new AxisAlignedBB((double) i, (double) j, (double) k, (double) (i + 1), (double) (j + 1), (double) (k + 1))).g(8.0D);
+        return (new AxisAlignedBB((double) i, (double) j, (double) k, (double) (i + 1), (double) (j + 1), (double) (k + 1))).g(searchRadius); // CraftBukkit - use our range instead of default
     }
 
     @Nullable
     private EntityLiving l() {
-        List list = this.world.a(EntityLiving.class, this.k(), (entityliving) -> {
+        List list = this.world.a(EntityLiving.class, this.k(), (Predicate<EntityLiving>) (entityliving) -> { // CraftBukkit - decompile error
             return entityliving.getUniqueID().equals(this.k);
         });
 
@@ -264,12 +285,20 @@
         return this.g;
     }
 
-    private void a(boolean flag) {
+    public void a(boolean flag, ConduitStatusEvent.Reason reason) { // CraftBukkit private -> public
         if (flag != this.g) {
+            // CraftBukkit - start - fire ConduitStatusEvent
+            ConduitStatusEvent event = new ConduitStatusEvent(CraftBlock.at(this.world, this.position), flag ? ConduitStatusEvent.Type.ACTIVATE : ConduitStatusEvent.Type.DEACTIVATE, reason);
+            Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             this.a(flag ? SoundEffects.BLOCK_CONDUIT_ACTIVATE : SoundEffects.BLOCK_CONDUIT_DEACTIVATE);
         }
 
         this.g = flag;
+        if (!this.g) ticksSinceActivated = 0.0F; // CraftBukkit - reset active counter
     }
 
     private void b(boolean flag) {
