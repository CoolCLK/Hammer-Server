--- a/net/minecraft/server/ItemLingeringPotion.java
+++ b/net/minecraft/server/ItemLingeringPotion.java
@@ -2,23 +2,31 @@
 
 public class ItemLingeringPotion extends ItemPotion {
 
-    public ItemLingeringPotion(Item.Info item_info) {
+    public ItemLingeringPotion(Info item_info) {
         super(item_info);
     }
 
     public InteractionResultWrapper<ItemStack> a(World world, EntityHuman entityhuman, EnumHand enumhand) {
         ItemStack itemstack = entityhuman.b(enumhand);
-        ItemStack itemstack1 = entityhuman.abilities.canInstantlyBuild ? itemstack.cloneItemStack() : itemstack.cloneAndSubtract(1);
+        // CraftBukkit start
+        //ItemStack itemstack1 = entityhuman.abilities.canInstantlyBuild ? itemstack.cloneItemStack() : itemstack.cloneAndSubtract(1); // CraftBukkit - use our logic
+        ItemStack itemstack1 = itemstack.cloneItemStack();
+        itemstack.setCount(Math.min(1, itemstack1.getCount())); // CraftBukkit - mimic cloneAndSubtract behavior
 
-        world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.ENTITY_LINGERING_POTION_THROW, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemLingeringPotion.k.nextFloat() * 0.4F + 0.8F));
+        // CraftBukkit - delegate to CraftProjectile //world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.ENTITY_LINGERING_POTION_THROW, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemLingeringPotion.k.nextFloat() * 0.4F + 0.8F));
+        InteractionResultWrapper<ItemStack> result = new InteractionResultWrapper<>(EnumInteractionResult.SUCCESS, itemstack); // CraftBukkit - default result
         if (!world.isClientSide) {
             EntityPotion entitypotion = new EntityPotion(world, entityhuman, itemstack1);
 
             entitypotion.a(entityhuman, entityhuman.pitch, entityhuman.yaw, -20.0F, 0.5F, 1.0F);
-            world.addEntity(entitypotion);
+            result = org.bukkit.craftbukkit.entity.CraftProjectile.handleItemRightClick(entitypotion, itemstack, world, entityhuman, enumhand);
+            if (result.a() == EnumInteractionResult.SUCCESS) {
+                world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.ENTITY_LINGERING_POTION_THROW, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemLingeringPotion.k.nextFloat() * 0.4F + 0.8F));
+            }
+            //world.addEntity(entitypotion); // CraftBukkit - delegate to CraftProjectile
         }
 
-        entityhuman.b(StatisticList.ITEM_USED.b(this));
-        return new InteractionResultWrapper(EnumInteractionResult.SUCCESS, itemstack);
+        //entityhuman.b(StatisticList.ITEM_USED.b(this)); // CraftBukkit - delegate to CraftProjectile
+        return result; // CraftBukkit end - use our result
     }
 }
