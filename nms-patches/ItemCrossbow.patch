--- a/net/minecraft/server/ItemCrossbow.java
+++ b/net/minecraft/server/ItemCrossbow.java
@@ -1,6 +1,9 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import org.bukkit.event.Event;
+
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Random;
 import java.util.function.Predicate;
@@ -12,6 +15,8 @@
 
     public ItemCrossbow(Item.Info item_info) {
         super(item_info);
+        // CraftBukkit start - obfuscator went a little crazy
+        /*
         this.a(new MinecraftKey("pull"), (itemstack, world, entityliving) -> {
             return entityliving != null && itemstack.getItem() == this ? (d(itemstack) ? 0.0F : (float) (itemstack.k() - entityliving.dm()) / (float) e(itemstack)) : 0.0F;
         });
@@ -24,6 +29,8 @@
         this.a(new MinecraftKey("firework"), (itemstack, world, entityliving) -> {
             return entityliving != null && d(itemstack) && a(itemstack, Items.FIREWORK_ROCKET) ? 1.0F : 0.0F;
         });
+        */
+        // CraftBukkit end
     }
 
     @Override
@@ -42,7 +49,7 @@
 
         if (d(itemstack)) {
             a(world, entityhuman, enumhand, itemstack, l(itemstack), 1.0F);
-            a(itemstack, false);
+            // a(itemstack, false); // CraftBukkit
             return new InteractionResultWrapper<>(EnumInteractionResult.SUCCESS, itemstack);
         } else if (!entityhuman.f(itemstack).isEmpty()) {
             if (!d(itemstack)) {
@@ -71,32 +78,52 @@
 
     }
 
-    private static boolean a(EntityLiving entityliving, ItemStack itemstack) {
+    private static boolean a(EntityLiving entityliving, ItemStack itemstack) {  // PAIL rename loadArrows
         int i = EnchantmentManager.getEnchantmentLevel(Enchantments.MULTISHOT, itemstack);
         int j = i == 0 ? 1 : 3;
         boolean flag = entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.canInstantlyBuild;
         ItemStack itemstack1 = entityliving.f(itemstack);
         ItemStack itemstack2 = itemstack1.cloneItemStack();
-
-        for (int k = 0; k < j; ++k) {
-            if (k > 0) {
-                itemstack1 = itemstack2.cloneItemStack();
+        // CraftBukkit start
+        if (itemstack1.isEmpty() && flag) {
+            itemstack1 = new ItemStack(Items.ARROW);
+            itemstack2 = itemstack1.cloneItemStack();
+        }
+        List<ItemStack> itemsToLoad = new ArrayList<>(j);
+        for (int c = 0; c < j; ++c) {
+            ItemStack stack = itemstack2.cloneItemStack();
+            stack.setCount(0);
+            itemsToLoad.add(stack);
+        }
+        org.bukkit.event.entity.EntityLoadCrossbowEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityLoadCrossbowEvent(entityliving, itemstack, itemstack2, itemsToLoad, flag? Event.Result.DENY : Event.Result.DEFAULT);
+        boolean willConsume = event.getWillConsumeArrow() == org.bukkit.event.Event.Result.ALLOW || (event.getWillConsumeArrow() == org.bukkit.event.Event.Result.DEFAULT && !event.isCancelled());
+        if (willConsume) {
+            if (itemstack1.isEmpty()) {
+                return false;
             }
-
-            if (itemstack1.isEmpty() && flag) {
-                itemstack1 = new ItemStack(Items.ARROW);
-                itemstack2 = itemstack1.cloneItemStack();
+            itemstack1.subtract(event.getConsumeArrowCount());
+            if (itemstack1.isEmpty() && entityliving instanceof EntityHuman) {
+                ((EntityHuman) entityliving).inventory.f(itemstack1);
             }
-
-            if (!a(entityliving, itemstack, itemstack1, k > 0, flag)) {
-                return false;
+        }
+        if (event.isCancelled()) {
+            if (entityliving instanceof EntityPlayer) {
+                ((EntityPlayer) entityliving).getBukkitEntity().updateInventory();
             }
+            return false;
         }
 
+        for (org.bukkit.inventory.ItemStack arrow : event.getItemsToLoad()) {
+            b(itemstack, org.bukkit.craftbukkit.inventory.CraftItemStack.asNMSCopy(arrow));
+        }
+        if (entityliving instanceof EntityPlayer) {
+            ((EntityPlayer) entityliving).getBukkitEntity().updateInventory();
+        }
+        // CraftBukkit end
         return true;
     }
 
-    private static boolean a(EntityLiving entityliving, ItemStack itemstack, ItemStack itemstack1, boolean flag, boolean flag1) {
+    private static boolean a(EntityLiving entityliving, ItemStack itemstack, ItemStack itemstack1, boolean flag, boolean flag1) {  // PAIL rename loadArrow
         if (itemstack1.isEmpty()) {
             return false;
         } else {
@@ -117,19 +144,19 @@
         }
     }
 
-    public static boolean d(ItemStack itemstack) {
+    public static boolean d(ItemStack itemstack) { // PAIL rename getCharged
         NBTTagCompound nbttagcompound = itemstack.getTag();
 
         return nbttagcompound != null && nbttagcompound.getBoolean("Charged");
     }
 
-    public static void a(ItemStack itemstack, boolean flag) {
+    public static void a(ItemStack itemstack, boolean flag) {  // PAIL rename setCharged
         NBTTagCompound nbttagcompound = itemstack.getOrCreateTag();
 
         nbttagcompound.setBoolean("Charged", flag);
     }
 
-    private static void b(ItemStack itemstack, ItemStack itemstack1) {
+    private static void b(ItemStack itemstack, ItemStack itemstack1) { // PAIL rename addChargedProjectile
         NBTTagCompound nbttagcompound = itemstack.getOrCreateTag();
         NBTTagList nbttaglist;
 
@@ -146,7 +173,7 @@
         nbttagcompound.set("ChargedProjectiles", nbttaglist);
     }
 
-    private static List<ItemStack> j(ItemStack itemstack) {
+    private static List<ItemStack> j(ItemStack itemstack) { // PAIL rename getChargedProjectiles
         List<ItemStack> list = Lists.newArrayList();
         NBTTagCompound nbttagcompound = itemstack.getTag();
 
@@ -165,7 +192,7 @@
         return list;
     }
 
-    private static void k(ItemStack itemstack) {
+    private static void k(ItemStack itemstack) { // PAIL rename clearChargedProjectiles
         NBTTagCompound nbttagcompound = itemstack.getTag();
 
         if (nbttagcompound != null) {
@@ -183,19 +210,21 @@
         });
     }
 
-    private static void a(World world, EntityLiving entityliving, EnumHand enumhand, ItemStack itemstack, ItemStack itemstack1, float f, boolean flag, float f1, float f2, float f3) {
+    private static void a(World world, EntityLiving entityliving, EnumHand enumhand, ItemStack itemstack, Entity object, float f, boolean flag, float f1, float f2, float f3) { // Craftbukkit - add parameter
         if (!world.isClientSide) {
-            boolean flag1 = itemstack1.getItem() == Items.FIREWORK_ROCKET;
-            Object object;
-
-            if (flag1) {
-                object = new EntityFireworks(world, itemstack1, entityliving.locX, entityliving.locY + (double) entityliving.getHeadHeight() - 0.15000000596046448D, entityliving.locZ, true);
-            } else {
-                object = a(world, entityliving, itemstack, itemstack1);
-                if (flag || f3 != 0.0F) {
-                    ((EntityArrow) object).fromPlayer = EntityArrow.PickupStatus.CREATIVE_ONLY;
-                }
-            }
+            boolean flag1 = object instanceof EntityFireworks;
+            // CraftBukkit start - moved down
+            // Object object;
+
+            // if (flag1) {
+            //     object = new EntityFireworks(world, itemstack1, entityliving.locX, entityliving.locY + (double) entityliving.getHeadHeight() - // 0.15000000596046448D, entityliving.locZ, true);
+            // } else {
+            //     object = a(world, entityliving, itemstack, itemstack1);
+            //     if (flag || f3 != 0.0F) {
+            //         ((EntityArrow) object).fromPlayer = EntityArrow.PickupStatus.CREATIVE_ONLY;
+            //     }
+            // }
+            // CraftBukkit end - moved down
 
             if (entityliving instanceof ICrossbow) {
                 ICrossbow icrossbow = (ICrossbow) entityliving;
@@ -214,7 +243,14 @@
             itemstack.damage(flag1 ? 3 : 1, entityliving, (entityliving1) -> {
                 entityliving1.d(enumhand);
             });
-            world.addEntity((Entity) object);
+            // CraftBukkit start
+            if (!world.addEntity(object)) {
+                if (entityliving instanceof EntityPlayer) {
+                    ((EntityPlayer) entityliving).getBukkitEntity().updateInventory();
+                }
+                return;
+            }
+            // CraftBukkit end
             world.a((EntityHuman) null, entityliving.locX, entityliving.locY, entityliving.locZ, SoundEffects.ITEM_CROSSBOW_SHOOT, SoundCategory.PLAYERS, 1.0F, f);
         }
     }
@@ -242,22 +278,60 @@
         List<ItemStack> list = j(itemstack);
         float[] afloat = a(entityliving.getRandom());
 
+        // CraftBukkit start - use a clean way to handle firing
+        List<Entity> projectiles = new java.util.ArrayList<>(list.size());
+        List<Float> angles = new java.util.ArrayList<>(list.size());
+        boolean flag = entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.canInstantlyBuild;
         for (int i = 0; i < list.size(); ++i) {
             ItemStack itemstack1 = (ItemStack) list.get(i);
-            boolean flag = entityliving instanceof EntityHuman && ((EntityHuman) entityliving).abilities.canInstantlyBuild;
-
-            if (!itemstack1.isEmpty()) {
-                if (i == 0) {
-                    a(world, entityliving, enumhand, itemstack, itemstack1, afloat[i], flag, f, f1, 0.0F);
-                } else if (i == 1) {
-                    a(world, entityliving, enumhand, itemstack, itemstack1, afloat[i], flag, f, f1, -10.0F);
-                } else if (i == 2) {
-                    a(world, entityliving, enumhand, itemstack, itemstack1, afloat[i], flag, f, f1, 10.0F);
+            Entity object;
+            float f3 = i == 0 ? 0.0F : ((float) Math.pow(-1, i)) * 10.0F;
+            angles.add(f3);
+            boolean flag1 = itemstack1.getItem() == Items.FIREWORK_ROCKET;
+            if (flag1) {
+                object = new EntityFireworks(world, itemstack1, entityliving.locX, entityliving.locY + (double) entityliving.getHeadHeight() - 0.15000000596046448D, entityliving.locZ, true);
+            } else {
+                object = a(world, entityliving, itemstack, itemstack1);
+                if (flag || f3 != 0.0F) {
+                    ((EntityArrow) object).fromPlayer = EntityArrow.PickupStatus.CREATIVE_ONLY;
                 }
             }
+            projectiles.add(object);
         }
-
-        a(world, entityliving, itemstack);
+        org.bukkit.event.entity.EntityShootCrossbowEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callEntityShootCrossbowEvent(entityliving, itemstack, list, projectiles, angles, f1);
+        boolean willUncharge = event.getWillConsumeArrow() == org.bukkit.event.Event.Result.ALLOW || (event.getWillConsumeArrow() == org.bukkit.event.Event.Result.DEFAULT && !event.isCancelled());
+        if (event.isCancelled()) {
+            for (org.bukkit.entity.Entity entity: event.getProjectiles()) {
+                entity.remove();
+            }
+            if (willUncharge) {
+                a(world, entityliving, itemstack);
+                a(itemstack, false);
+            }
+            return;
+        }
+        List<org.bukkit.entity.Entity> finalProjectiles = event.getProjectiles();
+        List<Float> finalAngles = event.getAngles();
+        for (int i = 0; i < finalProjectiles.size(); ++i) {
+            float angle;
+            if (finalAngles.size() > i) {
+                angle = finalAngles.get(i);
+            } else {
+                angle = ItemCrossbow.i.nextFloat();
+            }
+            float pitch;
+            if (afloat.length > i) {
+                pitch = afloat[i];
+            } else {
+                pitch = a(ItemCrossbow.i.nextBoolean());
+            }
+            a(world, entityliving, enumhand, itemstack, ((org.bukkit.craftbukkit.entity.CraftEntity) finalProjectiles.get(i)).getHandle(), pitch, flag, f, f1, angle);
+        }
+        if (willUncharge) {
+            a(world, entityliving, itemstack);
+            a(itemstack, false);
+        }
+        // CraftBukkit end
     }
 
     private static float[] a(Random random) {
