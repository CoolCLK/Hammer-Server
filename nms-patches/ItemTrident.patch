--- a/net/minecraft/server/ItemTrident.java
+++ b/net/minecraft/server/ItemTrident.java
@@ -6,9 +6,13 @@
 
     public ItemTrident(Item.Info item_info) {
         super(item_info);
+        // CraftBukkit start - obfuscator went a little crazy
+        /*
         this.a(new MinecraftKey("throwing"), (itemstack, world, entityliving) -> {
             return entityliving != null && entityliving.isHandRaised() && entityliving.cW() == itemstack ? 1.0F : 0.0F;
         });
+         */
+        // CraftBukkit end
     }
 
     public boolean a(IBlockData iblockdata, World world, BlockPosition blockposition, EntityHuman entityhuman) {
@@ -33,26 +37,47 @@
 
                 if (k <= 0 || entityhuman.ao()) {
                     if (!world.isClientSide) {
-                        itemstack.damage(1, entityhuman);
+                        //itemstack.damage(1, entityhuman); // CraftBukkit - move down to ProjectileLaunchEvent
                         if (k == 0) {
                             EntityThrownTrident entitythrowntrident = new EntityThrownTrident(world, entityhuman, itemstack);
 
                             entitythrowntrident.a(entityhuman, entityhuman.pitch, entityhuman.yaw, 0.0F, 2.5F + (float) k * 0.5F, 1.0F);
+                            // CraftBukkit start - fire ProjectileLaunchEvent
+                            org.bukkit.event.entity.ProjectileLaunchEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileLaunchEvent(entitythrowntrident, itemstack, entityhuman.cU());
+                            if (event.isCancelled()) {
+                                return;
+                            }
                             if (entityhuman.abilities.canInstantlyBuild) {
                                 entitythrowntrident.fromPlayer = EntityArrow.PickupStatus.CREATIVE_ONLY;
                             }
+                            if (!entityhuman.abilities.canInstantlyBuild) {
+                                if (world.addEntity(entitythrowntrident, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.THROWN)) {
+                                    if (event.shouldConsumeItem()) {
+                                        itemstack.damage(1, entityhuman);
+                                    }
+                                    entityhuman.b(StatisticList.ITEM_USED.b(this));
+                                    entityhuman.inventory.f(itemstack);
+                                    world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.ITEM_TRIDENT_THROW, SoundCategory.PLAYERS, 1.0F, 1.0F);
+                                }
+                            }
+                            return;
 
-                            world.addEntity(entitythrowntrident);
+                            /*world.addEntity(entitythrowntrident); // CraftBukkit move block up
                             if (!entityhuman.abilities.canInstantlyBuild) {
                                 entityhuman.inventory.f(itemstack);
-                            }
+                            } */
+                            // CraftBukkit end
                         }
                     }
 
-                    entityhuman.b(StatisticList.ITEM_USED.b(this));
+                    //entityhuman.b(StatisticList.ITEM_USED.b(this)); // CraftBukkit move up
                     SoundEffect soundeffect = SoundEffects.ITEM_TRIDENT_THROW;
 
                     if (k > 0) {
+                        // CraftBukkit start
+                        org.bukkit.event.player.PlayerRiptideEvent event = new org.bukkit.event.player.PlayerRiptideEvent((org.bukkit.entity.Player) entityhuman.getBukkitEntity(), org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack));
+                        event.getPlayer().getServer().getPluginManager().callEvent(event);
+                        // CraftBukkit end
                         float f = entityhuman.yaw;
                         float f1 = entityhuman.pitch;
                         float f2 = -MathHelper.sin(f * 0.017453292F) * MathHelper.cos(f1 * 0.017453292F);
