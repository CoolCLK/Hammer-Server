--- a/net/minecraft/server/Block.java
+++ b/net/minecraft/server/Block.java
@@ -19,8 +19,8 @@
     protected boolean n;
     protected int o;
     protected boolean p;
-    protected float strength;
-    protected float durability;
+    protected float strength; // PAIL: Rename hardness
+    protected float durability; // PAIL: Rename resistance
     protected boolean s;
     protected boolean t;
     protected boolean isTileEntity;
@@ -34,7 +34,7 @@
     private String name;
 
     public static int getId(Block block) {
-        return Block.REGISTRY.a((Object) block);
+        return Block.REGISTRY.a(block); // CraftBukkit - decompile error
     }
 
     public static int getCombinedId(IBlockData iblockdata) {
@@ -157,7 +157,8 @@
         return this;
     }
 
-    protected Block b(float f) {
+    // PAIL: Rename setResistance, make public
+    public Block b(float f) {
         this.durability = f * 3.0F;
         return this;
     }
@@ -190,7 +191,8 @@
         return false;
     }
 
-    protected Block c(float f) {
+    // PAIL: Rename setHardness, make public
+    public Block c(float f) {
         this.strength = f;
         if (this.durability < f * 5.0F) {
             this.durability = f * 5.0F;
@@ -199,11 +201,13 @@
         return this;
     }
 
-    protected Block k() {
+    // PAIL: Rename setUnbreakable, make public
+    public Block k() {
         this.c(-1.0F);
         return this;
     }
 
+    // PAIL: Rename getHardness
     public float b(IBlockData iblockdata, World world, BlockPosition blockposition) {
         return this.strength;
     }
@@ -301,7 +305,8 @@
             int j = this.getDropCount(i, world.random);
 
             for (int k = 0; k < j; ++k) {
-                if (world.random.nextFloat() <= f) {
+                // CraftBukkit - <= to < to allow for plugins to completely disable block drops from explosions
+                if (world.random.nextFloat() < f) {
                     Item item = this.getDropType(iblockdata, world.random, i);
 
                     if (item != null) {
@@ -342,6 +347,7 @@
         return 0;
     }
 
+    // PAIL: Rename getExplosionResistance
     public float a(Entity entity) {
         return this.durability / 5.0F;
     }
@@ -491,6 +497,7 @@
         return new ItemStack(Item.getItemOf(this), 1, this.getDropData(iblockdata));
     }
 
+    // PAIL: Rename setCreativeTab
     public Block a(CreativeModeTab creativemodetab) {
         this.creativeTab = creativemodetab;
         return this;
@@ -825,7 +832,7 @@
 
             if (hashset.contains(block16)) {
                 for (int i = 0; i < 15; ++i) {
-                    int j = Block.REGISTRY.a((Object) block16) << 4 | i;
+                    int j = Block.REGISTRY.a(block16) << 4 | i; // CraftBukkit - decompile error
 
                     Block.REGISTRY_ID.a(block16.fromLegacyData(i), j);
                 }
@@ -834,7 +841,7 @@
 
                 while (iterator2.hasNext()) {
                     IBlockData iblockdata = (IBlockData) iterator2.next();
-                    int k = Block.REGISTRY.a((Object) block16) << 4 | block16.toLegacyData(iblockdata);
+                    int k = Block.REGISTRY.a(block16) << 4 | block16.toLegacyData(iblockdata); // CraftBukkit - decompile error
 
                     Block.REGISTRY_ID.a(iblockdata, k);
                 }
@@ -843,6 +850,12 @@
 
     }
 
+    // CraftBukkit start
+    public int getExpDrop(World world, IBlockData data, int enchantmentLevel) {
+        return 0;
+    }
+    // CraftBukkit end
+
     private static void a(int i, MinecraftKey minecraftkey, Block block) {
         Block.REGISTRY.a(i, minecraftkey, block);
     }
