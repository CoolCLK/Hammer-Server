--- a/net/minecraft/server/EntityZombieVillager.java
+++ b/net/minecraft/server/EntityZombieVillager.java
@@ -3,12 +3,19 @@
 import java.util.UUID;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityTransformEvent;
+import org.bukkit.event.entity.EntityTransformEvent.TransformReason;
+// CraftBukkit end
+
 public class EntityZombieVillager extends EntityZombie {
 
     private static final DataWatcherObject<Boolean> a = DataWatcher.a(EntityZombieVillager.class, DataWatcherRegistry.i);
     private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityZombieVillager.class, DataWatcherRegistry.b);
     private int conversionTime;
     private UUID bD;
+    private int lastTick = MinecraftServer.currentTick; // CraftBukkit - add field
 
     public EntityZombieVillager(World world) {
         super(EntityTypes.ZOMBIE_VILLAGER, world);
@@ -56,6 +63,11 @@
     public void tick() {
         if (!this.world.isClientSide && this.isConverting()) {
             int i = this.dL();
+            // CraftBukkit start - Use wall time instead of ticks for villager conversion
+            int elapsedTicks = MinecraftServer.currentTick - this.lastTick;
+            this.lastTick = MinecraftServer.currentTick;
+            i *= elapsedTicks;
+            // CraftBukkit end
 
             this.conversionTime -= i;
             if (this.conversionTime <= 0) {
@@ -100,12 +112,22 @@
         this.bD = uuid;
         this.conversionTime = i;
         this.getDataWatcher().set(EntityZombieVillager.a, Boolean.valueOf(true));
-        this.removeEffect(MobEffects.WEAKNESS);
-        this.addEffect(new MobEffect(MobEffects.INCREASE_DAMAGE, i, Math.min(this.world.getDifficulty().a() - 1, 0)));
+        // CraftBukkit start
+        this.removeEffect(MobEffects.WEAKNESS, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        this.addEffect(new MobEffect(MobEffects.INCREASE_DAMAGE, i, Math.min(this.world.getDifficulty().a() - 1, 0)), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+        // CraftBukkit end
         this.world.broadcastEntityEffect(this, (byte) 16);
     }
 
     protected void dK() {
+        // CraftBukkit start
+        EntityTransformEvent transform = CraftEventFactory.callEntityTransformEvent(this, TransformReason.CURED);
+        if (transform.isCancelled()) {
+            this.conversionTime = 0;
+            this.getDataWatcher().set(EntityZombieVillager.a, false);
+            return;
+        }
+        // CraftBukkit end
         EntityVillager entityvillager = new EntityVillager(this.world);
 
         entityvillager.u(this);
@@ -123,7 +145,7 @@
             entityvillager.setCustomNameVisible(this.getCustomNameVisible());
         }
 
-        this.world.addEntity(entityvillager);
+        this.world.addEntity(entityvillager, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CURED); // CraftBukkit - add SpawnReason
         if (this.bD != null) {
             EntityHuman entityhuman = this.world.b(this.bD);
 
@@ -132,7 +154,7 @@
             }
         }
 
-        entityvillager.addEffect(new MobEffect(MobEffects.CONFUSION, 200, 0));
+        entityvillager.addEffect(new MobEffect(MobEffects.CONFUSION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION); // CraftBukkit
         this.world.a((EntityHuman) null, 1027, new BlockPosition((int) this.locX, (int) this.locY, (int) this.locZ), 0);
     }
 
