--- a/net/minecraft/server/ShapelessRecipes.java
+++ b/net/minecraft/server/ShapelessRecipes.java
@@ -6,12 +6,51 @@
 import com.google.gson.JsonParseException;
 import java.util.ArrayList;
 import java.util.Iterator;
+// CraftBukkit start
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.craftbukkit.inventory.CraftShapelessRecipe;
+// CraftBukkit end
 
 public class ShapelessRecipes implements IRecipe {
 
     private final ItemStack result;
     private final NonNullList<RecipeItemStack> ingredients;
     private final String c;
+    // CraftBukkit start
+    public MinecraftKey key;
+    public boolean hidden = false;
+    private boolean exactMatch = false;
+
+    @Override
+    public void setKey(MinecraftKey key) {
+        this.key = key;
+    }
+
+    @Override
+    public String getGroup() {
+        return this.c;
+    }
+
+    @Override
+    public boolean c() {
+        return hidden;
+    }
+
+    public void setHidden(boolean hidden) {
+        this.hidden = hidden;
+    }
+
+    public boolean isExactMatch() {
+        return this.exactMatch;
+    }
+
+    public void setExactMatch(boolean exactMatch) {
+        this.exactMatch = exactMatch;
+        for(RecipeItemStack stack : ingredients) {
+            stack.exactMatch = this.exactMatch;
+        }
+    }
+    // CraftBukkit end
 
     public ShapelessRecipes(String s, ItemStack itemstack, NonNullList<RecipeItemStack> nonnulllist) {
         this.c = s;
@@ -19,6 +58,24 @@
         this.ingredients = nonnulllist;
     }
 
+    // CraftBukkit start
+    @SuppressWarnings("unchecked")
+    public org.bukkit.inventory.ShapelessRecipe toBukkitRecipe() {
+        CraftItemStack result = CraftItemStack.asCraftMirror(this.result);
+        CraftShapelessRecipe recipe = new CraftShapelessRecipe(result, this);
+        recipe.group(getGroup());
+        recipe.setHidden(c()); // PAIL rename isHidden
+        recipe.setExactMatch(isExactMatch());
+        for (RecipeItemStack list : this.ingredients) {
+            if (list != null) {
+                net.minecraft.server.ItemStack stack = list.choices[0];
+                recipe.addIngredient(1, CraftItemStack.asBukkitCopy(stack));
+            }
+        }
+        return recipe;
+    }
+    // CraftBukkit end
+
     public ItemStack b() {
         return this.result;
     }
